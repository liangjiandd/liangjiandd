<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc 
		http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd
		http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
		http://www.springframework.org/schema/context 
		http://www.springframework.org/schema/context/spring-context-3.1.xsd">
  	
    <!--
    <context:component-scan base-package="com"/>  
    -->
    <context:component-scan base-package="com">
        <context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
		<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Service"/>
	</context:component-scan>	
   
    <mvc:annotation-driven/>
   
<!--servlet配置拦截所有'/'则不配置以下之一,页面将无法加载resources目录下资源 -->
<!--<mvc:resources mapping="/resources/**" location="/resources/"/>-->
<!--<mvc:default-servlet-handler/>-->
<!-- 不拦截静态文件 
     <mvc:default-servlet-handler default-servlet-name="所使用的Web服务器默认使用的Servlet名称" /> 
      Tomcat, Jetty, JBoss, and GlassFish  默认 Servlet的名字 : "default"
      Resin 默认 Servlet的名字 :"resin-file"
      WebLogic 默认 Servlet的名字  :"FileServlet"
      WebSphere  默认 Servlet的名字 :"SimpleFileServlet" --> 
    <mvc:default-servlet-handler default-servlet-name="default"/>
    
    <!-- 请求分发器 -->
    <!-- 
	<bean class="org.springframework.web.servlet.handler.BeanNameUrlHandlerMapping"/>
		<bean name="/my" class="com.action.MyController">
	</bean>
     -->
	<!-- 配置多视图解析器 -->
    <bean class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver">
        <!-- 这里是是否启用扩展名支持，默认就是true 例如  /user/{userid}.json -->
        <property name="favorPathExtension" value="true"/>
        <!-- 这里是是否启用参数支持，默认就是true 例如  /user/{userid}?format=json  -->
        <property name="favorParameter" value="false"/> 
        <!-- 这里是否忽略掉accept header，默认就是false 例如     GET /user HTTP/1.1 Accept:application/json -->
        <property name="ignoreAcceptHeader" value="true"/>
        <!-- 默认的数据返回格式,如果所有的mediaType都没匹配上，就会使用defaultContentType -->
        <property name="defaultContentType" value="text/html" /> 
        <!-- 配置媒体类型与扩展名的映射关系，也即将Content-Type=application/json的内容映射到
          http://localhost:8888/myapp/service/{id}.json这种格式  -->
        <property name="mediaTypes">
            <map>
                <entry key="json" value="application/json; charset=UTF-8"/>
                <entry key="xml" value="application/xml; charset=UTF-8"/>
                <entry key="html" value="text/html; charset=UTF-8"/>
            </map>
        </property>
        <property name="viewResolvers">
            <list>
                <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
				   <property name="prefix" value="/"/>
				   <property name="suffix" value=".jsp"/>
			   </bean>
            </list>
        </property>
    </bean>
	
    <!-- 上传拦截，如最大上传值及最小上传值，必须配置 -->  
	<bean id="multipartResolver"  
	      class="org.springframework.web.multipart.commons.CommonsMultipartResolver">  
	      <!-- one of the properties available; the maximum file size in bytes -->  
	      <property name="maxUploadSize" value="500000000" /> 
	</bean>   
		
</beans>